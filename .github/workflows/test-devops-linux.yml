name: Test Full DevOps Installer (Linux)

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-linux-full:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare dependencies (apt, pipx, gum, flatpak)
        run: |
          sudo apt update
          sudo apt install -y python3 python3-pip unzip curl git zsh flatpak
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath

          # Add gum from Charm if not in apt
          curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo tee /etc/apt/keyrings/charm.gpg >/dev/null
          echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ /" | sudo tee /etc/apt/sources.list.d/charm.list
          sudo apt update && sudo apt install -y gum

          flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

      - name: Set PATHs
        run: |
          echo 'export PATH=$HOME/.local/bin:$PATH' >> $GITHUB_ENV
          echo 'export PATH=$HOME/.local/bin:$PATH' >> ~/.bashrc
          source ~/.bashrc

      - name: Make script executable and run full install
        run: |
          chmod +x setup-devops-linux.sh
          ./setup-devops-linux.sh --all

      - name: Verify installed CLI tools
        run: |
          TOOLS=(
            terraform helm kubectl aws fzf bat htop ncdu tree
            pre-commit pipx python3 tldr yq eza
          )

          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ CLI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
          FAIL=0
          for tool in "${TOOLS[@]}"; do
            if ! command -v "$tool" &>/dev/null; then
              echo "‚ùå $tool –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
              FAIL=1
            else
              echo "‚úÖ $tool —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
          done

          if [[ $FAIL -ne 0 ]]; then
            echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ CLI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!"
            exit 1
          fi

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Oh My Zsh
        run: |
          echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ ~/.zshrc –∏ Powerlevel10k..."
          [[ -f ~/.zshrc ]] && echo "‚úÖ ~/.zshrc –Ω–∞–π–¥–µ–Ω" || (echo "‚ùå ~/.zshrc –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" && exit 1)
          grep -q "powerlevel10k/powerlevel10k" ~/.zshrc && echo "‚úÖ Powerlevel10k –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω" || (echo "‚ùå –¢–µ–º–∞ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞" && exit 1)

          echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ Oh My Zsh –ø–ª–∞–≥–∏–Ω–æ–≤..."
          PLUGINS=(
            zsh-autosuggestions
            zsh-syntax-highlighting
            zsh-completions
            zsh-z
          )
          for p in "${PLUGINS[@]}"; do
            [[ -d "$HOME/.oh-my-zsh/custom/plugins/$p" ]] && echo "‚úÖ $p —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || echo "‚ö†Ô∏è $p –Ω–µ –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –≤—Å—Ç—Ä–æ–µ–Ω)"
          done

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ DevOps –∞–ª–∏–∞—Å–æ–≤
        shell: zsh {0}
        run: |
          echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ DevOps –∞–ª–∏–∞—Å–æ–≤..."
          ALIASES=(k kgp kgn tf dc dcu dcd lg p)
          for a in "${ALIASES[@]}"; do
            if alias "$a" &>/dev/null; then
              echo "‚úÖ alias $a –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            else
              echo "‚ö†Ô∏è alias $a –ù–ï –Ω–∞–π–¥–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏)"
            fi
          done

      - name: –ü—Ä–æ–≤–µ—Ä–∫–∞ Neovim –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ Lazy.nvim
        run: |
          echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ Neovim –∏ Lazy.nvim..."
          command -v nvim || (echo "‚ùå Neovim –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)
          [[ -f ~/.config/nvim/init.lua ]] && echo "‚úÖ init.lua –Ω–∞–π–¥–µ–Ω" || (echo "‚ùå init.lua –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)

          echo "‚ö°Ô∏è Lazy.nvim sync..."
          nvim --headless "+Lazy! sync" +qa || echo "‚ö†Ô∏è Lazy.nvim sync –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π (–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –ø–ª–∞–≥–∏–Ω—ã)"

      - name: –£—Å–ø–µ—Ö!
        if: success()
        run: echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è DevOps-–æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Linux —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞!"
