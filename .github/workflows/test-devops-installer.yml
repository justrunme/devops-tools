name: Test DevOps Installer

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-macos:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Homebrew, pipx and gum
        run: |
          if ! command -v brew &>/dev/null; then
            NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          brew install pipx
          pipx ensurepath
          brew install charmbracelet/tap/gum

      - name: Run DevOps Installer inline (Bash guaranteed)
        shell: bash {0}
        run: |
          declare -A INSTALL_COMMANDS=(
            [git]="brew install git"
            [zsh]="brew install zsh"
            [fzf]="brew install fzf"
            [jq]="brew install jq"
            [bat]="brew install bat"
            [tree]="brew install tree"
            [docker]="brew install --cask docker"
            [docker-compose]="pipx install docker-compose"
            [kubectl]="brew install kubectl"
            [helm]="brew install helm"
            [k9s]="brew install k9s"
            [minikube]="brew install minikube"
            [terraform]="brew install terraform"
            [aws]="pipx install awscli"
            [gcloud]="brew install --cask google-cloud-sdk"
            [az]="brew install azure-cli"
            [gh]="brew install gh"
            [glab]="brew install glab"
            [pipx]="brew install pipx && pipx ensurepath"
            [ansible]="pipx install ansible"
            [visual-studio-code]="brew install --cask visual-studio-code"
            [iterm2]="brew install --cask iterm2"
            [act]="brew install act"
            [tailscale]="brew install --cask tailscale"
            [ngrok]="brew install --cask ngrok"
            [direnv]="brew install direnv"
            [zoxide]="brew install zoxide"
            [httpie]="brew install httpie"
            [cheat]="brew install cheat"
            [btop]="brew install btop"
          )

          echo "üß∞ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã..."
          for tool in "${!INSTALL_COMMANDS[@]}"; do
            echo "‚ñ∂Ô∏è $tool"
            eval "${INSTALL_COMMANDS[$tool]}" || echo "‚ö†Ô∏è $tool –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è"
          done

      - name: Verify installed tools
        shell: bash
        run: |
          TOOLS=(
            git zsh fzf jq bat tree docker docker-compose
            kubectl helm k9s minikube terraform
            aws gcloud az gh glab pipx ansible
            visual-studio-code iterm2 act tailscale ngrok
            direnv zoxide httpie cheat btop
          )

          echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..."
          FAIL=0
          for tool in "${TOOLS[@]}"; do
            if ! command -v "$tool" &>/dev/null; then
              echo "‚ùå $tool –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù!"
              FAIL=1
            else
              echo "‚úÖ $tool —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            fi
          done

          if [[ "$FAIL" -ne 0 ]]; then
            echo "‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ –±—ã–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            exit 1
          fi

      - name: Success
        if: success()
        run: echo "üéâ –í—Å–µ DevOps-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã!"
