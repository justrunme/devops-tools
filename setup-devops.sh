#!/usr/bin/env bash
set -e

# ---------- –¶–≤–µ—Ç–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ ----------
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
NC="\033[0m"
function info()    { echo -e "${YELLOW}[INFO]${NC} $1"; }
function success() { echo -e "${GREEN}[OK]${NC} $1"; }

# ---------- –ü—Ä–æ–≤–µ—Ä–∫–∞ gum ----------
if ! command -v gum &>/dev/null; then
  info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é gum (–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å)..."
  brew install charmbracelet/tap/gum
fi

# ---------- –ü—Ä–æ–≤–µ—Ä–∫–∞ pipx (–¥–ª—è Python —É—Ç–∏–ª–∏—Ç) ----------
if ! command -v pipx &>/dev/null; then
  info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é pipx..."
  brew install pipx
  pipx ensurepath
fi

# ---------- –ê—Ä–≥—É–º–µ–Ω—Ç—ã ----------
MODE=""
for arg in "$@"; do
  case "$arg" in
    --all|-a) MODE="all" ;;
    --gui)    MODE="gui" ;;
    --cli)    MODE="cli" ;;
  esac
done

# ---------- –°–ø–∏—Å–∫–∏ —Ç—É–ª–∑–æ–≤ ----------
GUI_TOOLS=(
  "üê≥ Docker Desktop ‚Äî –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º:brew install --cask docker"
  "‚òÅÔ∏è Google Cloud SDK ‚Äî CLI-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è Google Cloud:brew install --cask google-cloud-sdk"
  "üìù Visual Studio Code ‚Äî —Ä–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞:brew install --cask visual-studio-code"
  "üíª iTerm2 Terminal ‚Äî —É–ª—É—á—à–µ–Ω–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª:brew install --cask iterm2"
  "üîí Tailscale VPN ‚Äî mesh-—Å–µ—Ç—å VPN:brew install --cask tailscale"
  "üåê Ngrok Tunnel ‚Äî –ø—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç:brew install --cask ngrok"
)

CLI_TOOLS=(
  "‚öôÔ∏è kubectl ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Kubernetes:brew install kubectl"
  "‚õµ helm ‚Äî –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ Kubernetes:brew install helm"
  "üì¶ minikube ‚Äî –ª–æ–∫–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Ç–µ—Ä Kubernetes:brew install minikube"
  "üê≥ docker CLI ‚Äî –∫–ª–∏–µ–Ω—Ç Docker:brew install docker"
  "‚òÅÔ∏è AWS CLI ‚Äî —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ AWS:brew install awscli"
  "ü¶ä GitLab CLI ‚Äî –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç GitLab:brew install glab"
  "üß† Azure CLI ‚Äî —Ä–∞–±–æ—Ç–∞ —Å Microsoft Azure:brew install azure-cli"
  "üêç Python + pipx ‚Äî –¥–ª—è DevOps-—Å–∫—Ä–∏–ø—Ç–æ–≤:brew install python && brew install pipx && pipx ensurepath"
  "üß∞ Kind ‚Äî Kubernetes –≤ Docker:brew install kind"
  "üî≠ k9s ‚Äî –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è Kubernetes:brew install k9s"
  "‚ö° lazygit ‚Äî —É–¥–æ–±–Ω–∞—è CLI Git-–æ–±–æ–ª–æ—á–∫–∞:brew install lazygit"
  "üîç fzf ‚Äî fuzzy-–ø–æ–∏—Å–∫ –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ:brew install fzf"
  "üß™ bat ‚Äî —É–ª—É—á—à–µ–Ω–Ω–∞—è cat —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π:brew install bat"
  "üìä htop ‚Äî –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:brew install htop"
  "üìÅ ncdu ‚Äî –∞–Ω–∞–ª–∏–∑ –¥–∏—Å–∫–∞:brew install ncdu"
  "üå≥ tree ‚Äî –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—ã–π –≤—ã–≤–æ–¥ —Ñ–∞–π–ª–æ–≤:brew install tree"
)

# ---------- –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è ----------
case "$MODE" in
  all) FINAL_LIST=("${GUI_TOOLS[@]}" "${CLI_TOOLS[@]}") ;;
  gui) FINAL_LIST=("${GUI_TOOLS[@]}") ;;
  cli) FINAL_LIST=("${CLI_TOOLS[@]}") ;;
  *)
    info "–í—ã–±–µ—Ä–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    CHOICES=$(printf "%s\n\n%s" "----- GUI -----" "${GUI_TOOLS[@]}" "----- CLI -----" "${CLI_TOOLS[@]}" |
      grep -v '^$' |
      gum choose --no-limit --height=30 --header="–í—ã–±–µ—Ä–∏ DevOps-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:")
    FINAL_LIST=($CHOICES)
    ;;
esac

# ---------- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ ----------
for item in "${FINAL_LIST[@]}"; do
  TOOL_NAME=$(echo "$item" | cut -d '‚Äî' -f1 | sed 's/^[^ ]* //')
  TOOL_CMD=$(echo "$item" | cut -d ':' -f2-)

  TOOL_ID=$(echo "$TOOL_CMD" | awk '{print $3}')

  if brew list "$TOOL_ID" &>/dev/null || brew list --cask "$TOOL_ID" &>/dev/null; then
    success "$TOOL_NAME —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é."
  else
    gum spin --title "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é $TOOL_NAME..." -- bash -c "$TOOL_CMD"
    success "$TOOL_NAME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  fi
done

# ---------- –§–∏–Ω–∞–ª ----------
echo -e "\n${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ DevOps-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
