#!/bin/bash
set -e

# ---------- –¶–≤–µ—Ç–∞ –∏ —Ñ—É–Ω–∫—Ü–∏–∏ ----------
GREEN="\033[0;32m"
YELLOW="\033[1;33m"
NC="\033[0m"
function info()    { echo -e "${YELLOW}[INFO]${NC} $1"; }
function success() { echo -e "${GREEN}[OK]${NC} $1"; }

# ---------- –ü—Ä–æ–≤–µ—Ä–∫–∞ gum ----------
if ! command -v gum &>/dev/null; then
  info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é gum..."
  brew install charmbracelet/tap/gum
fi

# ---------- –ü—Ä–æ–≤–µ—Ä–∫–∞ pipx ----------
if ! command -v pipx &>/dev/null; then
  info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é pipx..."
  brew install pipx
  pipx ensurepath
fi

# ---------- –ú–∞–ø–ø–∏–Ω–≥ —Ç—É–ª–∑–æ–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã ----------
declare -A INSTALL_COMMANDS=(
  [brew]="brew install brew"
  [git]="brew install git"
  [zsh]="brew install zsh"
  [oh-my-zsh]="sh -c \"\$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\""
  [fzf]="brew install fzf"
  [jq]="brew install jq"
  [bat]="brew install bat"
  [tree]="brew install tree"
  [docker]="brew install --cask docker"
  [docker-compose]="pipx install docker-compose"
  [lazydocker]="brew install lazydocker"
  [kubectl]="brew install kubectl"
  [helm]="brew install helm"
  [k9s]="brew install k9s"
  [minikube]="brew install minikube"
  [kind]="brew install kind"
  [kubectx]="brew install kubectx"
  [kubens]="brew install kubens"
  [skaffold]="brew install skaffold"
  [kustomize]="brew install kustomize"
  [awscli]="pipx install awscli"
  [gcloud]="brew install --cask google-cloud-sdk"
  [az]="brew install azure-cli"
  [gh]="brew install gh"
  [glab]="brew install glab"
  [pipx]="brew install pipx && pipx ensurepath"
  [ansible]="pipx install ansible"
  [visual-studio-code]="brew install --cask visual-studio-code"
  [iterm2]="brew install --cask iterm2"
  [act]="brew install act"
  [tilt]="brew install tilt"
  [tailscale]="brew install --cask tailscale"
  [ngrok]="brew install --cask ngrok"
  [terraform]="brew install terraform"
  [tfsec]="brew install tfsec"
  [tflint]="brew install tflint"
  [terragrunt]="brew install terragrunt"
  [direnv]="brew install direnv"
  [zoxide]="brew install zoxide"
  [httpie]="brew install httpie"
  [cheat]="brew install cheat"
  [btop]="brew install btop"
)

# ---------- –°–ø–∏—Å–æ–∫ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ ----------
CHOICES=$(gum choose --no-limit --height=40 --header="–í—ã–±–µ—Ä–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:" <<EOF
üõ†Ô∏è [CORE] brew
üõ†Ô∏è [CORE] git
üõ†Ô∏è [CORE] zsh
üõ†Ô∏è [CORE] oh-my-zsh
üõ†Ô∏è [CORE] fzf
üõ†Ô∏è [CORE] jq
üõ†Ô∏è [CORE] bat
üõ†Ô∏è [CORE] tree
üê≥ [DOCKER] docker
üê≥ [DOCKER] docker-compose
üê≥ [DOCKER] lazydocker
‚ò∏Ô∏è [KUBERNETES] kubectl
‚ò∏Ô∏è [KUBERNETES] helm
‚ò∏Ô∏è [KUBERNETES] k9s
‚ò∏Ô∏è [KUBERNETES] minikube
‚ò∏Ô∏è [KUBERNETES] kind
‚ò∏Ô∏è [KUBERNETES] kubectx
‚ò∏Ô∏è [KUBERNETES] kubens
‚ò∏Ô∏è [KUBERNETES] skaffold
‚ò∏Ô∏è [KUBERNETES] kustomize
‚òÅÔ∏è [CLOUD] awscli
‚òÅÔ∏è [CLOUD] gcloud
‚òÅÔ∏è [CLOUD] az
‚òÅÔ∏è [CLOUD] gh
‚òÅÔ∏è [CLOUD] glab
‚öôÔ∏è [DEVTOOLS] pipx
‚öôÔ∏è [DEVTOOLS] ansible
‚öôÔ∏è [DEVTOOLS] visual-studio-code
‚öôÔ∏è [DEVTOOLS] iterm2
‚ö° [EXTRAS] act
‚ö° [EXTRAS] tilt
‚ö° [EXTRAS] tailscale
‚ö° [EXTRAS] ngrok
üì¶ [INFRA] terraform
üì¶ [INFRA] tfsec
üì¶ [INFRA] tflint
üì¶ [INFRA] terragrunt
üîß [UTILITIES] direnv
üîß [UTILITIES] zoxide
üîß [UTILITIES] httpie
üîß [UTILITIES] cheat
üîß [UTILITIES] btop
EOF
)

# ---------- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ç—É–ª–∑–æ–≤ ----------
for item in $CHOICES; do
  TOOL=$(echo "$item" | awk '{print $3}')
  CMD="${INSTALL_COMMANDS[$TOOL]}"
  if [[ -n "$CMD" ]]; then
    gum spin --title "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é $TOOL..." -- bash -c "$CMD"
    success "$TOOL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  else
    info "$TOOL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ INSTALL_COMMANDS ‚Äî –ø—Ä–æ–ø—É—â–µ–Ω"
  fi
done

# ---------- –§–∏–Ω–∞–ª ----------
echo -e "\n${GREEN}–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏: source ~/.zshrc${NC}"
